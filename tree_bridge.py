__author__ = 'chenn'

content = r'''
B3 <= 131.1523:
:...B7 > 0.5965:
:   :...B2 <= 59.8954:
:   :   :...B4 <= 1852: s21 (91/2)
:   :   :   B4 > 1852: s33 (4/1)
:   :   B2 > 59.8954:
:   :   :...B7 <= 0.605: s21 (3/2)
:   :       B7 > 0.605: s22 (4/1)
:   B7 <= 0.5965:
:   :...Lon <= 100.6639:
:       :...B8 <= 2.6488:
:       :   :...B2 <= 47.5624: s41 (3)
:       :   :   B2 > 47.5624: s32 (59/1)
:       :   B8 > 2.6488:
:       :   :...Lat > 22.24704: s32 (3/1)
:       :       Lat <= 22.24704:
:       :       :...Lat > 21.75286: s33 (54)
:       :           Lat <= 21.75286:
:       :           :...B9 <= 127.8223: s24 (2)
:       :               B9 > 127.8223: s33 (3/1)
:       Lon > 100.6639:
:       :...B1 <= 126.7776:
:           :...B4 <= 827: s41 (8)
:           :   B4 > 827: s32 (3)
:           B1 > 126.7776:
:           :...B2 <= 56.3717: s21 (4)
:               B2 > 56.3717:
:               :...Lon <= 100.8293: s24 (7)
:                   Lon > 100.8293:
:                   :...B4 > 1003: s25 (51)
:                       B4 <= 1003:
:                       :...B3 <= 125.1897: s25 (12)
:                           B3 > 125.1897:
:                           :...B3 > 128.171: s24 (6/1)
:                               B3 <= 128.171:
:                               :...B11 <= 51: s24 (7/1)
:                                   B11 > 51: s25 (2)
B3 > 131.1523:
:...B9 <= 101.3944:
    :...B1 <= 135.2308: s41 (22)
    :   B1 > 135.2308:
    :   :...Lon <= 100.3497: s122 (2)
    :       Lon > 100.3497:
    :       :...Lat > 22.0743: s53 (2/1)
    :           Lat <= 22.0743:
    :           :...B11 <= 24: s112 (3/1)
    :               B11 > 24:
    :               :...B4 <= 534: s112 (2/1)
    :                   B4 > 534: s51 (42/1)
    B9 > 101.3944:
    :...B3 <= 155.0023:
        :...B9 > 235.2451:
        :   :...Lon <= 101.1501: s22 (20/1)
        :   :   Lon > 101.1501: s112 (4/1)
        :   B9 <= 235.2451:
        :   :...B2 <= 68.7047: s112 (33/1)
        :       B2 > 68.7047:
        :       :...B4 <= 572: s112 (14/1)
        :           B4 > 572:
        :           :...B11 > 165: s53 (2)
        :               B11 <= 165:
        :               :...B5 > 28.6321: s25 (2/1)
        :                   B5 <= 28.6321:
        :                   :...B2 > 70.4666: s24 (113/2)
        :                       B2 <= 70.4666:
        :                       :...B3 <= 137.1148: s24 (8)
        :                           B3 > 137.1148: s112 (4)
        B3 > 155.0023:
        :...B4 > 785:
            :...B11 <= 29: s122 (12)
            :   B11 > 29: s53 (31/1)
            B4 <= 785:
            :...B2 > 116.275:
                :...Lat <= 21.53303: s65 (5)
                :   Lat > 21.53303:
                :   :...B1 <= 315.5642: s55 (28/3)
                :       B1 > 315.5642: s53 (3/1)
                B2 <= 116.275:
                :...Lon <= 100.3497: s24 (2)
                    Lon > 100.3497:
                    :...B9 > 130.602: s65 (52)
                        B9 <= 130.602:
                        :...B11 > 228: s55 (2)
                            B11 <= 228:
                            :...Lon <= 101.0394: s53 (3)
                                Lon > 101.0394:
                                :...B3 <= 160.9648: s53 (2)
                                    B3 > 160.9648: s65 (2)'''

from itertools import takewhile
import string

is_space = lambda x: x in string.whitespace or x in ':.'

get_head = lambda line: list(takewhile(is_space, line))

#s = open('g:/Cultivated Land.out').readlines()[10:98]

#heads = list(len(get_head(line)) / 4 for line in s)

#print heads


heads = [0, 1,
         2,
         3,
         3,
         2,
         3,
         3,
         1,
         2,
         3,
         4,
         4,
         3,
         4,
         4,
         5,
         5,
         6,
         6,
         2,
         3,
         4,
         4,
         3,
         4,
         4,
         5,
         5,
         6,
         6,
         7,
         7,
         8,
         8,
         9,
         9,
         0,
         1,
         2,
         2,
         3,
         3,
         4,
         4,
         5,
         5,
         6,
         6,
         1,
         2,
         3,
         4,
         4,
         3,
         4,
         4,
         5,
         5,
         6,
         6,
         7,
         7,
         8,
         8,
         9,
         9,
         2,
         3,
         4,
         4,
         3,
         4,
         5,
         5,
         6,
         6,
         4,
         5,
         5,
         6,
         6,
         7,
         7,
         8,
         8,
         9,
         9]



